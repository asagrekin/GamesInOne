name: GitHub Actions
run-name: CI Test
on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./src/front-end/front-end-interface/GamesInOne.sln 

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Debug
  
  # Path to the test .dll
  TEST_BIN_PATH: ./src/front-end/front-end-test/bin

permissions:
  contents: read
jobs:
  Front-End-Test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    
    - name: Setup VSTest.console.exe
      uses: darenm/Setup-VSTest@v1.2
      
    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Test
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: VSTest.Console.exe ${{env.TEST_BIN_PATH}}/${{env.BUILD_CONFIGURATION}}/net6.0-windows/FrontEndTest.dll

  Beack-End-Test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1

      - name: CMake build folder 
        run: cd ./src/backend/ && cmake -S . -B build
        
      - name: CMake build
        run: cd ./src/backend/ && cmake --build build

      - name: Test
        run: cd ./src/backend/build &&ctest
