on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset
run-name: Create Release Zip

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./src/front-end/front-end-interface/GamesInOne.sln 

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build x64
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x64 ${{env.SOLUTION_FILE_PATH}}

    - name: Build x86
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x86 ${{env.SOLUTION_FILE_PATH}}

    - name: Create Zip x64
      uses: vimtor/action-zip@v1
      with:
        files: GamesInOne-Release/x64/
        dest: GamesInOne_x64.zip
    
    - name: Create Zip x86
      uses: vimtor/action-zip@v1
      with:
        files: GamesInOne-Release/x84/
        dest: GamesInOne_x86.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: GamesInOne Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset x64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./GamesInOne_64.zip
        asset_name: GamesInOne_x64.zip
        asset_content_type: application/zip
    
    - name: Upload Release Asset x86
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./GamesInOne_x86.zip
        asset_name: GamesInOne_x86.zip
        asset_content_type: application/zip